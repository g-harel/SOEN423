#!/bin/bash

ORB_PORT=1051

SRC_PATH=$(pwd)/src
BIN_PATH=$(pwd)/bin
LOG_PATH=$BIN_PATH/log

IDL_NAME=EmployeeManagementSystem
CLIENT_CLASS=Client
SERVER_CLASS=Server

clear
# rm -rf $LOG_PATH

function step {
    echo -e "\n >> \e[1;35m$1\e[0m\n"
}

function fallback {
    if [[ $1 != "" ]]; then
      echo "$1"
    else
      echo "$2"
    fi
}

function delay {
    sleep $(fallback $1 0.3141519)
}

function compile_idl {
    rm -rf $SRC_PATH/$IDL_NAME
    idlj -fall -td $SRC_PATH $SRC_PATH/$IDL_NAME.idl
}

function compile_java {
    mkdir -p $BIN_PATH
    javac -d $BIN_PATH $SRC_PATH/*.java $SRC_PATH/**/*.java
}

function start_orbd {
    orbd -ORBInitialPort $ORB_PORT -defaultdb ./bin/orbd
}

function run_server {
    pushd $BIN_PATH >/dev/null
    >&2 echo "starting server:" "$@"
    java $SERVER_CLASS "$@" -ORBInitialPort $ORB_PORT >/dev/null
    popd >/dev/null
}

function run_client {
    pushd $BIN_PATH >/dev/null
    >&2 echo "starting client:" "$@"
    java $CLIENT_CLASS "$@" -ORBInitialPort $ORB_PORT
    popd >/dev/null
}

function cleanup {
    step "cleaning up"
    delay
    pkill orbd
    rogues=$(ps T | grep -oP "^\s*\d+(?=.*java (Server|Client) [A-Z]{2})" | grep -oP "\w+")
    if [[ $rogues != "" ]]; then
        kill $rogues
    fi
}

trap cleanup EXIT
